<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns='http://www.springframework.org/schema/beans'
	xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:context='http://www.springframework.org/schema/context'
	xmlns:tx='http://www.springframework.org/schema/tx'
	xsi:schemaLocation='http://www.springframework.org/schema/beans 
 http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context 
  http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/tx 
  http://www.springframework.org/schema/tx/spring-tx.xsd'>
	<context:annotation-config />

	<!--<context:component-scan base-package="com.pier.config, com.pier.model.security, 
		com.pier.rest, com.pier.security.service, com.pier.security.*, com.pier.service.*, 
		com.pier.service"/> -->
	<context:component-scan base-package="com.pier.*" />

	<!-- load properties file, it has to be here for beans to pick it up -->
	<context:property-placeholder location="classpath:jwt2.properties" />


	<tx:annotation-driven />


	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/FStore" />
		<property name="username" value="mxphysique" />
		<property name="password" value="mxphysique1992-2017" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="annotatedClasses"> <list> </list> </property> -->

		<property name="packagesToScan">
			<list>
				<value>com.pier.model.security</value>
				<value>com.pier.security.service</value>
				<value>com.pier.rest.model</value>
				<value>com.pier.controllers</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
				<prop key="hibernate.default_schema">FStore</prop>
			</props>
		</property>
	</bean>

	<!-- to be used with @Transactional -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- uncomment this to remove the need of use Transactional annotation -->
	<!-- <prop key="hibernate.current_session_context_class">org.hibernate.context.ThreadLocalSessionContext</property> -->

	<!-- run SQL queries with spring -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg type="javax.sql.DataSource" ref="dataSource" />
	</bean>



</beans>